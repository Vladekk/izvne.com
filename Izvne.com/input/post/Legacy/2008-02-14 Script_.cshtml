Id: 7b82a0ce-4177-477c-98d3-b0f1338b6cb3
Title: "Script#"
Published: "2008-02-14"
Slug: "2008-02-14 Script_"
-
<p>
&nbsp;&nbsp;&nbsp;&nbsp; Я обычно скептически отношусь к бесконечному количеству языков программирования и компиляторов, которые можно увидеть в интернете. Каждый сильно умный программист считает своим долгом написать новый компилятор. При этом каждый кулик своё болото хвалит: каждый разработчик считает, что его любимый язык самый лучший, а иногда&nbsp; - что остальные и вовсе надо запретить. Тем временем , пользовательские приложения полны ошибок, неудобны,&nbsp; малофункциональны и сложны в использовании.&nbsp; Если программисты, которые создают компиляторы и пропагндируют новые можные языки, такие уж способные, почему бы им не улучшить жизнь простых людей написанием более качественного широкоиспользуемого софта? Ответ простой: им скучно и муторно ловить мелкие ошибки и продумывать детали UI, зато продумывать хитрые алгоритмы и возможности языков очень интересно. При этом большинство таких людей делает вид, что создание нового языка - дело крайне важное, и без этого прогресс остановится, а программ никто писать не будет.
</p>
 
<p>
Так вот, всё это я пишу неспроста. А потому что, наткнулся на <a href="https://www.nikhilk.net/ScriptSharpIntro.aspx" title="Сайт проекта Script#">Script#</a> - транслятор с моего любимого C# в клиентский JavaScript. На первой взгляд выглядит и работает оно удивительно, и полезность вполне проглядывается. Где-то читал идею, что интересное направление развития клиентских веб-приложений - некие язык и платформа, компилятор которой преобразует результат в кросс-броузерный оптимизированный и надёжный JavaScript. Script# - некоторое подтверждение если&nbsp; и не жизненности такой концепции, то по крайней мере её осуществимости в практическом ключе.
</p>
 
<p>
Вывод отсюда такой. Бесконечные проекты по созданию разных сред и языков всё-таки нужны: видимо, некоторые из них так же радуют и удивляют разработчиков, как Script# удивил и порадовал меня.
</p>
 
<p>
Всё вышесказанное вполне относится и к другим профессиям. Понятно, что такие люди (фанатики, не приносящие прямой пользы) иногда нужны, и без их потуг не будет движения вперёд. Да и восхищение в своей среде они обычно вызывают большее, нежели безликие труженники клавиатуры, пищущие скучные пользовательские приложения.&nbsp; К сожалению, создатели компиляторов и ОС, хоть и теоретики в каком-то смысле, но не до конца. Так, они очень и очень часто не используют результаты трудов настоящих учёных IT сферы , связанные с организацией и оптимизацией всяких сложных систем. Уже в 60-70 годах придумали целые горы таких вещей, а некоторые до сих пор изобретают велосипед. Так, среды со автоматической сборкой мусора только сейчас стали широко распространены, хотя вопреки распростанённому заблуждению, они в правильной реализации почти равны по скорости средам с ручной очисткой памяти. Были также идеи по надёжному распределённому интернету и прочее. 
</p>
 
<p>
Ларс Фон Триер как-то сказал, что кино всего сто лет, и мы только в начале пути.&nbsp; Поэтому меня крайне успокаивает только тот факт, что разработке ПО как виду деятельности всего 40-50 лет. Выходит наши текущие старания&nbsp; - это первые робкие шаги ребёнка, и через некоторое время софт наконец станет более-менее надёжным и удобным.
</p>

	