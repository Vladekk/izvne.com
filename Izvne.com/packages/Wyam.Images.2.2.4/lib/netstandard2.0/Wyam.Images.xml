<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Wyam.Images</name>
    </assembly>
    <members>
        <member name="T:Wyam.Images.Image">
            <summary>
            This module manipulates images by applying a variety of operations.
            </summary>
            <remarks>
            <para>
            This module manipulates images by applying operations such as resizing, darken/lighten, etc. This image module
            does not modify your original images in any way. It will create a copy of your images and produce images in the
            same image format as the original. It relies on other modules such as <c>ReadFiles</c> to read the actual images as
            input and <c>WriteFiles</c> to write images to disk.
            </para>
            <code>
            Pipelines.Add("Images",
              ReadFiles("*")
                .Where(x => new[] { ".jpg", ".jpeg", ".gif", ".png"}.Contains(x.Path.Extension)),
              Image()
                .SetJpegQuality(100).Resize(400,209).SetSuffix("-thumb"),
              WriteFiles("*")
            );
            </code>
            <para>
            It will produce image with similar file name as the original image with addition of suffix indicating operations
            that have performed, e.g. "hello-world.jpg" can result in "hello-world-w100.jpg". The module allows you to perform more
            than one set of processing instructions by using the fluent property <c>And</c>.
            </para>
            <code>
            Pipelines.Add("Images",
              ReadFiles("*")
                .Where(x => new[] { ".jpg", ".jpeg", ".gif", ".png"}.Contains(x.Path.Extension)),
              Image()
                .SetJpegQuality(100).Resize(400, 209).SetSuffix("-thumb")
                .And()
                .SetJpegQuality(70).Resize(400*2, 209*2).SetSuffix("-medium"),
              WriteFiles("*")
            );
            </code>
            <para>
            The above configuration produces two set of new images, one with a "-thumb" suffix and the other
            with a "-medium" suffix.
            </para>
            </remarks>
            <metadata cref="F:Wyam.Common.Meta.Keys.RelativeFilePath" usage="Input" />
            <metadata cref="F:Wyam.Common.Meta.Keys.WritePath" usage="Output" />
            <category>Content</category>
        </member>
        <member name="M:Wyam.Images.Image.#ctor">
            <summary>
            Process images in the content of the input document.
            </summary>
        </member>
        <member name="M:Wyam.Images.Image.OutputAsJpeg">
            <summary>
            Outputs the image as JPEG. This will override the default
            behavior of outputting the image as the same format.
            </summary>
            <returns>The current module instance.</returns>
        </member>
        <member name="M:Wyam.Images.Image.OutputAsPng">
            <summary>
            Outputs the image as PNG. This will override the default
            behavior of outputting the image as the same format.
            </summary>
            <returns>The current module instance.</returns>
        </member>
        <member name="M:Wyam.Images.Image.OutputAsGif">
            <summary>
            Outputs the image as GIF. This will override the default
            behavior of outputting the image as the same format.
            </summary>
            <returns>The current module instance.</returns>
        </member>
        <member name="M:Wyam.Images.Image.OutputAsBmp">
            <summary>
            Outputs the image as BMP. This will override the default
            behavior of outputting the image as the same format.
            </summary>
            <returns>The current module instance.</returns>
        </member>
        <member name="M:Wyam.Images.Image.OutputAs(System.Action{SixLabors.ImageSharp.Image{SixLabors.ImageSharp.PixelFormats.Rgba32},System.IO.Stream},System.Func{Wyam.Common.IO.FilePath,Wyam.Common.IO.FilePath})">
            <summary>
            Allows you to specify an alternate output format for the image.
            For example, you might use this if you want to full specify the encoder and it's properties.
            This will override the default behavior of outputting the image as the same format.
            </summary>
            <param name="action">An action that should write the provided image to the provided stream.</param>
            <param name="pathModifier">Modifies the destination path after applying the operation (for example, to set the extension).</param>
            <returns>The current module instance.</returns>
        </member>
        <member name="M:Wyam.Images.Image.Operation(System.Func{SixLabors.ImageSharp.Processing.IImageProcessingContext{SixLabors.ImageSharp.PixelFormats.Rgba32},SixLabors.ImageSharp.Processing.IImageProcessingContext{SixLabors.ImageSharp.PixelFormats.Rgba32}},System.Func{Wyam.Common.IO.FilePath,Wyam.Common.IO.FilePath})">
            <summary>
            Allows you to specify your own ImageSharp operation.
            </summary>
            <param name="operation">The operation to perform on the image.</param>
            <param name="pathModifier">Modifies the destination path after applying the operation.</param>
            <returns>The current module instance.</returns>
        </member>
        <member name="M:Wyam.Images.Image.Resize(System.Nullable{System.Int32},System.Nullable{System.Int32},SixLabors.ImageSharp.Processing.Transforms.AnchorPositionMode,SixLabors.ImageSharp.Processing.Transforms.ResizeMode)">
            <summary>
            Resizes the image to a certain width and height. No resizing will be performed if
            both width and height are set to <c>null</c>.
            </summary>
            <param name="width">The desired width. If set to <c>null</c> or <c>0</c>, the image will maintain it's original aspect ratio.</param>
            <param name="height">The desired height. If set to <c>null</c> or <c>0</c>, the image will maintain it's original aspect ratio.</param>
            <param name="anchor">The anchor position to use (if necessary).</param>
            <param name="mode">The resize mode to use.</param>
            <returns>The current module instance.</returns>
        </member>
        <member name="M:Wyam.Images.Image.BlackWhite">
            <summary>
            Applies black and white toning to the image.
            </summary>
            <returns>The current module instance.</returns>
        </member>
        <member name="M:Wyam.Images.Image.Brightness(System.Single)">
            <summary>
            Brightens the image.
            </summary>
            <param name="amount">
            The proportion of the conversion. Must be greater than or equal to 0.
            A value of 0 will create an image that is completely black.
            A value of 1 leaves the input unchanged. Other values are linear multipliers on the effect.
            Values of an amount over 1 are allowed.
            </param>
            <returns>The current module instance.</returns>
        </member>
        <member name="M:Wyam.Images.Image.Opacity(System.Single)">
            <summary>
            Multiplies the alpha component of the image.
            </summary>
            <param name="amount">
            The proportion of the conversion. Must be between 0 and 1.
            </param>
            <returns>The current module instance.</returns>
        </member>
        <member name="M:Wyam.Images.Image.Hue(System.Single)">
            <summary>
            Sets the hue of the image using <c>0</c> to <c>360</c> degree values.
            </summary>
            <param name="degrees">The degrees to set.</param>
            <returns>The current module instance.</returns>
        </member>
        <member name="M:Wyam.Images.Image.Vignette(SixLabors.ImageSharp.PixelFormats.Rgba32)">
            <summary>
            Apply vignette processing to the image with specific color, e.g. <c>Vignette(Rgba32.AliceBlue)</c>.
            </summary>
            <param name="color">The color to use for the vignette.</param>
            <returns>The current module instance.</returns>
        </member>
        <member name="M:Wyam.Images.Image.Saturate(System.Single)">
            <summary>
            Saturates the image.
            </summary>
            <param name="amount">
            A value of 0 is completely un-saturated. A value of 1 leaves the input unchanged.
            Other values are linear multipliers on the effect. Values of amount over 1 are allowed,
            providing super-saturated results.</param>
            <returns>The current module instance.</returns>
        </member>
        <member name="M:Wyam.Images.Image.Contrast(System.Single)">
            <summary>
            Adjusts the contrast of the image.
            </summary>
            <param name="amount">
            A value of 0 will create an image that is completely gray.
            A value of 1 leaves the input unchanged. Other values are linear multipliers on the effect.
            Values of an amount over 1 are allowed, providing results with more contrast.
            </param>
            <returns>The current module instance.</returns>
        </member>
        <member name="M:Wyam.Images.Image.SetSuffix(System.String)">
            <summary>
            Set the suffix of the generated image, e.g. <c>SetSuffix("-medium")</c> will transform original
            filename "hello-world.jpg" to "hello-world-medium.jpg".
            </summary>
            <param name="suffix">The suffix to use.</param>
            <returns>The current module instance.</returns>
        </member>
        <member name="M:Wyam.Images.Image.SetPrefix(System.String)">
            <summary>
            Set the prefix of the generated image, e.g. <c>SetPrefix("medium-")</c> will transform original
            filename "hello-world.jpg" to "medium-hello-world.jpg".
            </summary>
            <param name="prefix">The prefix to use.</param>
            <returns>The current module instance.</returns>
        </member>
        <member name="M:Wyam.Images.Image.And">
            <summary>
            Mark the beginning of another set of processing instructions to be applied to the images.
            </summary>
            <returns>The current module instance.</returns>
        </member>
        <member name="M:Wyam.Images.Image.Execute(System.Collections.Generic.IReadOnlyList{Wyam.Common.Documents.IDocument},Wyam.Common.Execution.IExecutionContext)">
            <inheritdoc />
        </member>
    </members>
</doc>
